  // ********************************************************************
        //  CustSu22 READ BY NATIVE LANGUAGE (ILE RPG)
        //  ContactS22 ROW RETRIEVED WITH EMBEDDED SQL
        //  DETAIL REPORT LINE INCLUDES INFORMATION FROM CustSu22 AND CONTACTW
        //  SUMMARRY REPORT INFORMATION RETRIEVED WITH EMBEDDED SQL STATEMENTS

           DCL-F PHNREPORT  PRINTER OFLIND(*IN01) ;  // let printer file participate in and indicato
           DCL-F CustSu22 DISK(*EXT) KEYED USAGE(*INPUT)
                 RENAME(CustSu22:CUSTR); // make table CustSu22 as an extrnal file to import
       // data structure for host variables from CONTACTS22
           DCL-DS CONTACTS22 EXT END-DS; // declare data structure of CONTACTS22

       // Standalone fields for indicator variables
           DCL-S INDLCALLD BINDEC (4:0);     // this is an indicator variable, for SELECT INTO state
           DCL-S INDNEXTCDATE BINDEC (4:0);  // this is an indicator variable, for SELECT INTO state
           DCL-S Dummy  Zoned(1);            // it is used in the SQLSTATE check if SQLSTATE = '0000
        //**********************************************************************
        //*                        ***   M A I N   R O U T I N E   ***
        //**********************************************************************
           EXSR SummaryInfo;     // first we need to retrieve and get data from information what we
                WRITE NEWPAGE;   // import the return value of routine SummaryInfo to the fist recor
                READ CustSu22;   // make computer read next line from table CustSu22
                DOW NOT %EOF;    // using dowhile loop  (program will loop while EOF is not true)
                    EXSR SQLSelect; // inside loop, we need to take two tables's data together
                    IF *IN01 = *ON; // Check if indicator 1 is on or not, program will turn on indic
                       Write NEWPAGE;  // if indicator 1 is on, then import record to NEWPAGE
                       *IN01 = *OFF;  // I need to turn off indicator 1 manually
                    ENDIF;
                    Write RPTLINE; // import records to second record format RPTLINE
                   READ CustSu22;  // make computer read next line from table CustSu22
                ENDDO;
                Write SUMMARY;   // lastly, import records to SUMMARY
                *INLR = *ON; //End statement1
                RETURN;      //End statement2
         //**********************************************************************
        //   S Q L S E L E C T   S U B R O U T I N E
        //********************************************************************
                       BEGSR    SQLSelect ;
         // A row from the Contacts table that has the same customer number as t
         // record read from the CustSu22 file is retrieved to find out the last
         // called, phone number, comments and the salesperson number.
         //  The call back interval is added to the last date called to determin
         //  next date to call.  Since null values may be stored in the last dat
         // indicator variables are used.
           ErrorMsg = ' ';
           HIGHLIGHT = ' ';
           EXEC SQL
             SELECT LCALLD + CALLBINT DAYS,
                    LCALLD,
                    PHONE,
                    SLSNUMBER
             INTO   :NEXTCDATE :INDNEXTCDATE,
                    :LCALLD    :INDLCALLD,
                    :PHONE,
                    :SLSNUMBER
             FROM   BCI433LIB/CONTACTS22
             WHERE  CNUMBER = :CSTNUM;
            SELECT;
              WHEN SQLSTATE = '00000';
                DUMMY = 0;
              WHEN SQLSTATE = '02000';
                ERRORMSG = 'MATCH NOT FOUND';
                PHONE = 9999999999;
                NEXTCDATE = D'9999-09-09';
                LCALLD = D'9999-09-09';
                SLSNUMBER = -999;
              WHEN %SUBST(SQLSTATE:1:2) = '01';
                ERRORMSG = 'WARNING OCCURED';
                PHONE = 9999999999;
                NEXTCDATE = D'9999-09-09';
                LCALLD = D'9999-09-09';
                SLSNUMBER = -999;
              OTHER;
                ERRORMSG = 'ERROR OCCURED';
                PHONE = 9999999999;
                NEXTCDATE = D'9999-09-09';
                LCALLD = D'9999-09-09';
                SLSNUMBER = -999;
            ENDSL;
            IF INDLCALLD = -1;
              ERRORMSG = 'UNKNOWN DATE';
              NEXTCDATE = D'9999-09-09';
            ENDIF;
            IF (LCALLD = OLDESTDATE);
              HIGHLIGHT = '<-------';
            ENDIF;
           ENDSR ;
         //**********************************************************************
        // S U M M A R Y I N F O   S U B R O U T I N E
        //**********************************************************************
                         BEGSR  SummaryInfo;
        //  D E T E R M I N E   T O T A L S   F O R   ContactS22 & CustSu22
            EXEC SQL
              SELECT COUNT(*)
                INTO :CONTACTT
                FROM BCI433LIB/CONTACTS22;
            IF (SQLCODE <> 0) OR (SQLWN0 = 'W');
              CONTACTT = -9999;
            ENDIF;
            EXEC SQL
              SELECT COUNT(*)
                INTO :CUSTOMERT
                FROM BCI433LIB/CustSu22;
             IF (SQLCODE <> 0) OR (SQLWN0 = 'W');
              CONTACTT = -9999;
            ENDIF;
          // D E T E R M I N E   N U M B E R   O F   U N K N O W N   LAST DATE CAL
           EXEC SQL
             SELECT COUNT(*)
               INTO :UNKNOWNT
               FROM BCI433LIB/CONTACTS22
               WHERE LCALLD IS NULL;
            IF (SQLCODE <> 0) OR (SQLWN0 = 'W');
              UNKNOWNT = -9999;
            ENDIF;
           //  D E T E R M I N E   O L D E S T   &  M O S T   R E C E N T  LAST DAT
           EXEC SQL
             SELECT MIN(LCALLD)
               INTO :OLDESTDATE
               FROM BCI433LIB/CONTACTS22;
           IF (SQLCODE <> 0) OR (SQLWN0 = 'W');
             OLDESTDATE = D'9999-09-09';
           ENDIF;
           EXEC SQL
             SELECT MAX(LCALLD)
               INTO :MOSTRECENT
               FROM BCI433LIB/CONTACTS22;
           IF (SQLCODE <> 0) OR (SQLWN0 = 'W');
             MOSTRECENT = D'9999-09-09';
           ENDIF;
         // D E T E R M I N E   T H E   U S E R   S E R V E R   &   T I M E S T A
       // SYSIBM/SYSDUMMY1 from System registers,Don't need check SQLCODE
          EXEC SQL
            SELECT USER, CURRENT TIMESTAMP, CURRENT SERVER
              INTO :USER, :TIMESTAMP, :SERVER
              FROM SYSIBM/SYSDUMMY1;
       ENDSR;                                    